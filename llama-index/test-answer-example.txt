In the xv6 operating system, processes are created using the fork() system call implemented in proc.c. Fork works by duplicating the parent process to create a child process. The new child receives its own process control block, a copy of the parent's memory space, and inherits open file descriptors. When fork() returns, the child process gets a return value of 0, while the parent receives the child's process ID (PID) as the return value. This approach to process creation is a core feature of Unix-like operating systems.